@import '../node_modules/@angular/material/_theming.scss';
@import 'variables.scss';
// Plus imports for other components in your app.
/*---------------------------------*/
/* Theme */
/*---------------------------------*/

@include mat-core();
@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,900|Source+Sans+Pro:600,900&display=swap');



* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
    height: 100%;
    height: 100vh;
  }

html, body, app {
  height: 100%;
  background-image: url('../src/assets/background.jpg');
  background-size: cover;

}

undefined {
  display: block;
  background-color: green;
  min-height: 80%;
  min-height: 80vh;
}

body {
  font-size: 16px!important;
  margin: 0;
  padding: 0;
  font-family: $font-family-content;
  font-size: $font-size-base;
  line-height: $line-height-base;
  background-color: $background-color;
  color: $content-color;
  min-height: 100%;
  height: 100%;
}
.mat-step-label-selected, .mat-step-text-label {
  font-size: 16px!important;
}
.mat-step-icon-selected {
  background-color: map-get($colors, primary)!important;
}

h1, h2, h3, h4, h5 {
  font-family: $font-family-title;
  font-weight: 700;
}

h2 {
  margin-top: 20px!important;
}

h3 {
  margin-top: 10px!important;
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


// Remove the lateral arrows for input[type="number"]
input[type="number"] {
  -webkit-appearance: textfield;
     -moz-appearance: textfield;
          appearance: textfield;
}
input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none;
}
/*---------------------------------*/
/* Utilities
/*---------------------------------*/
.align-items-row {
  display: flex;
  align-items: center;
}

.align-button-items-row {
  display: flex;
  flex-flow: row;
  align-items: center;
  justify-content: center;
}
mat-icon {
  &[color="success"] {
    color: map-get($map:$colors, $key: success);
  }
  
  &[color="danger"] {
    color: map-get($map:$colors, $key: danger);
  }
  
  &[color="warn"] {
    color: map-get($map:$colors, $key: warn);
  }
}

.full-width {
  width: 100%;
}

.half-width {
  min-width: 250px;
  width: calc(50% - 10px);
  &:not(:last-of-type) {
    margin-right: 10px;
  }
}

.third-width {
  min-width: 150px;
  width: calc(33.33% - 10px);
  &:not(:last-of-type) {
    margin-right: 10px;
  }
}

.small-width {

  min-width: 250px;
  max-width: calc(50% - 10px);
  &:not(:last-of-type) {
    margin-right: 10px;
  }
}


.visibility-icon {
  color: lighten(map-get($map: $colors, $key: dark), 20%);
}

.loading-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 20px 0;
}

.disabled {
  display: none;
}

mat-card {
  box-shadow: none !important;
}

.link {
  cursor: pointer;
}

a.link { 
    color: map-get($colors, dark-neutral);
    &:hover {
      color: map-get($colors, dark-primary);
    }
}

mat-card-title {
  padding-bottom: 15px;
}

.form-actions {
  width: 100%;
  display: flex;
  flex-wrap: wrap-reverse;
  flex-flow: row;
  justify-content: space-between;
  a {
    display: block;
  }

  
  [slot="begin"] {
    margin-right: auto;
  }
  [slot="end"] {
    margin-left: auto;
  }
}


/*---------------------------------*/
/* Panel */
/*---------------------------------*/
@mixin panel-color($color-label, $color-accent, $color-contrast: map-get($map:$colors, $key: light)) {
  &[color="#{$color-label}"] {
    border: 3px solid $color-accent;
    .panel-icon {
      background-color: $color-accent;
      color: $color-contrast;
    }
  }
}

.panel {
  display: flex;
  flex-flow: row;

  background-color: map-get($map:$colors, $key: light);
  width: 100%;
  min-width: 100%;

  &.half-width {
    width: calc(50% - 30px);
    min-width: 300px;
    margin-right: 15px;
  }
  &.third-width {
    width: calc(33% - 30px);
    min-width: 300px;
    margin-right: 15px;
  }

  margin: 8px 0;
 
  .panel-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    min-width: 60px;
    mat-icon {
      display: block;
    }
  }
  .panel-content {
    padding: 20px;
    
    h1, h2, h3 {
      margin-top: 0!important;
      padding-top: 0!important;
    }
  
  }
  @include panel-color("success",  map-get($map:$colors, $key: success));
  @include panel-color("warn",  map-get($map:$colors, $key: warn));
  @include panel-color("danger",  map-get($map:$colors, $key: danger));
  @include panel-color("primary",  map-get($map:$colors, $key: primary));
  @include panel-color("dark",  map-get($map:$colors, $key: dark));
}

/*---------------------------------*/
/* Page utilities
/*---------------------------------*/

.page {
  box-sizing: border-box;
  display: block;
  width: 100%;
  margin-left: 0px;
  min-height: calc(100% - 44px);
}

.page-header {
  background-color: map-get($map: $colors, $key: light);
  display: block;
  box-sizing: border-box;
  width: 100%;
  padding: 25px 20px;
  h1, h2, h3 {
    margin: 0;
  }
}

.page-content {
  box-sizing: border-box;
  width: 100%;
  padding: 25px 20px;

  .actions {
    margin-top: 15px;
    margin-bottom: 15px;
  }
}

.adaptive-page_600 {
  display: block;
  width: 100%;
  max-width: 600px!important;
}

/*---------------------------------*/
/* List utilities
/*---------------------------------*/

.list {
  &.cdk-drop-list-dragging .list-item:not(.cdk-drag-placeholder) {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }
}
.list-item {
  display: block;
  background-color: map-get($map: $colors, $key: light);
  border-left: solid 8px map-get($map: $colors, $key: dark);

  padding: 15px;
  margin-bottom: 8px;
  display: flex;
  flex-flow: row;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  width: 100%;
  box-shadow: 0px 0px 0px rgba(0,0,0,0.01);


  &.cdk-drag-preview {
    box-shadow: 0px 13px 15px rgba(0,0,0,0.15);
  }
  &.cdk-drag-placeholder {
    opacity: 0;
  }
  &.cdk-drag-animating {
    transition: all 250ms cubic-bezier(0, 0, 0.2, 1);
  }
  
  .list-item-handle {
    padding-right: 10px;
    color: map-get($map: $colors, $key: dark-grey);
    vertical-align: middle;
    cursor: grab;
  }

  .list-item-inner_left {
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    align-items: center;
    line-height: 1em;
    &>div {
      margin-right: 10px;
    }
  }


  .list-item-inner_right {
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    align-items: center;
  }
}


/*---------------------------------*/
/*Checkbox  List utilities
/*---------------------------------*/

.checkbox-list {
  display: flex;
  flex-flow: column;
  padding-right: 40px;
  mat-checkbox {
      padding: 5px 0;
  }
}
.checkbox-mosaic {
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
}


.slide-toggle-list {
  display: flex;
  flex-flow: column;
  padding-right: 40px;
  margin-bottom: 20px;
  mat-slide-toggle {
      padding: 20px 0;
  }
}

.toggles{
  margin: 1.2rem 0;
  mat-slide-toggle{
      margin: 1.3rem;
  }
  
}

/*---------------------------------*/
/* Inputs-List utilities
/*---------------------------------*/

.inputs-list>.input-item {
  display: flex;
  flex-flow: row;
  align-items: center;
  justify-content: space-between;
  background-color: map-get($map: $colors, $key: light);
  padding: 10px 20px;
  margin-bottom: 8px;
  .input-item_index {
      background-color: map-get($map: $colors, $key: dark);
      color: map-get($map: $colors, $key: light);
      border-radius: 40px;
      font-weight: bold;
      box-sizing: border-box;
      line-height: 40px;
      min-width: 40px;
      min-height: 40px;
      text-align: center;
      vertical-align: center;
      margin-right: 20px;
  }
  mat-form-field {
      width: 100%;
  }
}
.inputs-list_actions {
  display: flex;
  flex-flow: row;
  justify-content: flex-end;
  margin-top: 20px;
}



/*---------------------------------*/
/* mat-button utilities
/*---------------------------------*/

mat-button[color="dark"] {
  background-color: map-get($map: $colors, $key: dark);
}

/*---------------------------------*/
/* unit field utilities
/*---------------------------------*/
.unit-field {
  width: 3em;
  margin-right: 15px;
}

/*---------------------------------*/
/* radio buttons utilities
/*---------------------------------*/

.radio-button-list {
  mat-radio-group {
      padding-left: 15px;
      padding-bottom: 15px;
      display: block;
  }

  mat-radio-button {
      padding-right: 15px;
  }
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding: 15px;
}
// responsive class for items with delete button

@media screen and (min-width: 465px) {
  .row-with-delete-button{
      position: relative;
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-between;
      padding: 15px;
    mat-form-field{
       flex: 1 0 0%;
    }
    button{
        position: absolute;
        top: 0;
        right: 0;
    }
  }
}

  .row-with-delete-button{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
  button{
    margin-left: auto;
  }

}

/*-----------------------------------*/
/* div color utilities
/*-----------------------------------*/

@mixin div-color($color-label, $color-accent, $color-contrast: map-get($map:$colors, $key: dark)) {
  div[color="#{$color-label}"] {
    background-color: $color-accent;
    color: $color-contrast;
  }
}

@include div-color('grey', map-get($map:$colors, $key: grey));


/*-----------------------------------*/
/* Button utilities
/*-----------------------------------*/

button > mat-spinner {
  max-width: 30px;
}

/*-----------------------------------*/
/* Expansion with form utilities
/*-----------------------------------*/

.list-item_expansion-with-form {
    mat-expansion-panel-header {
        height: fit-content;
        margin: 0;
        padding: 0;
        mat-panel-title {
            padding: 5px;
            display: flex;
            align-items: center;
            flex-wrap: wrap;
            .list-item_title {
                margin: 0;
                padding: 5px;
                margin-left: 10px;
                text-align: left;
            }
            .list-item_marker-fab, .list-item_marker-button {
                @include mat-elevation(2);
                display: block;
                margin: 5px;
            }
        }
    }

    .selected {
        border-left: solid 8px map-get($map: $colors, $key: primary);
        box-shadow: 0px 0px 0px rgba(0,0,0,0.01);
    }
}

::ng-deep .mat-expansion-panel-body {
    background-color: map-get($map: $colors, $key: shader-light);
}

/*-----------------------------------*/
/* Virtual lists
/*-----------------------------------*/

.virtual-list-viewport {
    width: 100%;
    height: calc(100vh - 350px);
    min-height: 500px;
}

.virtual-list-item {
    min-height: 58px;
    width: 100%;
    padding-bottom: 8px;
}